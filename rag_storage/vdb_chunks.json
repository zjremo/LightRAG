{"embedding_dim": 1024, "data": [{"__id__": "chunk-cfac3998afa8ac36f23c14ef32bc776d", "__created_at__": 1754379265, "content": "计算机学院 网络空间安全学院\n2023 年免试研究生推荐工作安排及实施细则\n一、 学院推免工作的指导思想和工作原则\n根据南党发〔2021〕63号关于修订《南开大学推荐优秀应届本科毕业生免试攻读研究生工作实施办法》的通知和教通字【2022】38 号-《关于做好 2023 年推荐优秀应届本科毕业生免试攻读研究生准备工作的通知》文件要求，本着公平、择优的原则，结合我院情况，具体安排推荐工作如下：\n二、学院推免工作的基本条件\n1. 推荐标准将以学校要求为基本条件，同时考虑学生综合素质的培养。\n（1）推免工作的对象为根据普通本科招生计划录取的本校应届毕业生。\n（2）基本推荐条件：\n① 拥护中国共产党的领导和社会主义制度，具有爱国主义情操和集体主义精神，思想道德素质优良，社会责任感强，无违法违纪受处分记录，无考试作弊和剽窃他人学术成果等行为。\n② 勤奋学习，刻苦钻研，成绩优秀。在推荐遴选时已经按照正常教学计划修满必修课程，转学和校外交流学生可将学校已经认定的学分计入总学分；必修课（通识必修课、大类基础课、专业必修课）平均学分绩（只计算学生在我校修读课程的成绩）排名应在本专业本年级具有我校学籍学生的前80%以内（以排序时在校正式学籍学生数为基准）。\n三、学院推免工作遴选规则\n1. 综合成绩核定方法\n（1） 推免名单依据学生在本专业本年级的综合排名及本专业推免名额确定。申请推免的学生在满足学院推免基本条件的情况下，必须参加综合排名，综合排名以综合成绩高低排序决定。综合成绩由计算学分绩（即学生前三学年通识必修课、大类基础课、专业必修课、专业选修课累计学分绩）、综合素质评价成绩两部分加权组成，即：综合成绩=计算学分绩×94%+综合素质评价成绩×6%。综合素质评价成绩由重要赛事、发表论文、科研训练和参军入伍服兵役四项成绩组成，总累计加分不超过 100 分。其中，重要赛事、发表论文属于特殊学术专长，由申请人提出申请并提供材料、经由学院专家审核小组审查通过并公示后方可生效。\n（2） 重要赛事：获得高教社杯全国大学生数学建模竞赛、全国大学生电子设计竞赛、“挑战杯”全国大学生课外学术科技作品竞赛和中国“互联网+”大学生创新创业大赛四项国家级重要赛事一、二、三等奖将分别加分50、40、30 分；获多项奖励者只计最高加分、不重复计算。\n（3） 发表论文：学生第一作者（即发表时作者排序为第一位）发表CCF-英文（A类、B类、C类对应加分50、33.3、16.7）、CCF-中文（A类、B类对应加分33.3、16.7）、SCI检索期刊20分、EI检索期刊10分；OPEN ACCESS期刊不加分；多篇论文只计最高加分、不重复加分，论文加分最高不超过 50 分。\n（4） 科研训练：各专业代表性赛事和一般赛事根据《计网学院专业赛事加分标准》进行加分，获多项奖励者只计最高加分、不重复计算，如获重要赛事加分，则本项不加分；辅修专业课程取得50学分以上可加16.7分。\n（5） 参军入伍服兵役：在综合素质评价中所占权重为10%（即10分），通过百分制进行换算。具体的，按照参军入伍、嘉奖、优秀士兵、三等功及以上奖励，分别给予5、6、8、9分的分数认定，在旅团级以上比武竞赛中取得优胜或在遂行重大任务中表现优异的，额外给予0.5分加分奖励（可累加，至10分为止）。\n（6） 申请推免的学生均需经过学院的综合素质评价审核，获得综合排名。\n2. 学院推免生遴选工作领导小组有权调整本单位内各专业的推荐名额。\n3. 学校下达给我院推荐免试生指标后，我院将依据应届级本科学生人数，按比例下达给各专业名额。\n4. 计算机学院 网络空间安全学院推免生遴选工作领导小组名单\n组长：袁晓洁、翟明睿\n副组长：刘哲理、沈宝庆\n成员：程明明、张建忠、贾春福、杨巨峰、张莹、宫晓利、李忠伟、苏明、王天娇\n秘书：王怡然\n2023年计算机学院 网络空间安全学院专家审核小组名单\n组长：徐敬东\n成员：刘哲理、王刚、程", "full_doc_id": "doc-597602ca25ed84d7a41895f61f930612", "file_path": "2023年计算机学院 网络空间安全学院免试研究生推荐工作细则.docx"}, {"__id__": "chunk-e3acb8e42b770bfbf34e0163f1d903e3", "__created_at__": 1754379265, "content": "袁晓洁、翟明睿\n副组长：刘哲理、沈宝庆\n成员：程明明、张建忠、贾春福、杨巨峰、张莹、宫晓利、李忠伟、苏明、王天娇\n秘书：王怡然\n2023年计算机学院 网络空间安全学院专家审核小组名单\n组长：徐敬东\n成员：刘哲理、王刚、程明明、杨巨峰、汪定、宫晓利\n四、学院推免工作的具体流程\n以下推荐流程具体实施时间以现实中学校接到教育部相关文件、通知学院启动推免遴选工作的时间为准。\n8 月 31 日- 9 月 2 日，公示《计算机学院 网络空间安全学院2022年免试研究生推荐工作安排及实施细则》，期间面向相关年级学生举办本年度推免政策宣讲说明会。\n2. 9 月 8 日发布2019级学生通识必修课、大类基础课、专业必修课课程累积学分绩排名。\n3. 9 月 9 日下午 14:00-20:00 之间个人提交书面申请：凡符合南开大学免试研究生推荐标准的我院本科生均可申请，书面申请包含“2021年南开大学计算机学院与网络空间安全学院优秀应届本科生免试申请攻读研究生资格申请表”、待审核个人业绩材料目录——审核表、相关证明材料按目录上所标注的顺序附后，注意需附上能够提交参加综合素质评价审核的获奖证书复印件、论文样刊或论文接收函等证明材料。因疫情等特殊原因无法返校的同学，本人手写签字后的“申请表”扫描件、材料目录与个人业绩证明扫描件合并成一个pdf文件，文件以“学号+姓名+专业”命名，发送至邮箱wangyiran@nankai.edu.cn。\n5. 9 月 13 日，学院推免生遴选工作领导小组对申请保研的学生进行初审（书面申请、学习情况、奖惩情况）并发布初审通过的学生名单。\n6. 9 月 14 日 - 9 月 16 日期间安排综合素质评价审查工作，答辩时间地点另行通知。\n7. 9 月 17 日学院公示“特殊学术专长”学生材料审核结果、公示推免综合排名。（公示期为 9 月 17 日至 9 月 19 日）对综合成绩持有异议的学生，请于公示期内上交《南开大学推荐免试研究生复议申请表》，提请学院推免生遴选工作领导小组进行复议，逾期不予受理。\n\n五、其他事项说明\n获得免试研究生推荐资格的同学，学院不给办理出国相关各种手续。\n取得推免资格的学生须按照教育部和学校教务处的要求在网上进行报名，具体时间和安排以教育部统一规定的时间为准。\n本《细则》适用于我院2023年免试研究生推荐工作。\n\n\n计算机学院 网络空间安全学院\n2022年8月23日", "full_doc_id": "doc-597602ca25ed84d7a41895f61f930612", "file_path": "2023年计算机学院 网络空间安全学院免试研究生推荐工作细则.docx"}, {"__id__": "chunk-047d3e9833fac19729ce4569282ccef6", "__created_at__": 1754449282, "content": "# Trae Agent\r\n\r\n[![Python 3.12+](https://img.shields.io/badge/python-3.12+-blue.svg)](https://www.python.org/downloads/) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\r\n![Alpha](https://img.shields.io/badge/Status-Alpha-red)\r\n[![Pre-commit](https://github.com/bytedance/trae-agent/actions/workflows/pre-commit.yml/badge.svg)](https://github.com/bytedance/trae-agent/actions/workflows/pre-commit.yml)\r\n[![Unit Tests](https://github.com/bytedance/trae-agent/actions/workflows/unit-test.yml/badge.svg)](https://github.com/bytedance/trae-agent/actions/workflows/unit-test.yml)\r\n[![Discord](https://img.shields.io/discord/1320998163615846420?label=Join%20Discord&color=7289DA)](https://discord.gg/VwaQ4ZBHvC)\r\n\r\n**Trae Agent** is an LLM-based agent for general purpose software engineering tasks. It provides a powerful CLI interface that can understand natural language instructions and execute complex software engineering workflows using various tools and LLM providers.\r\n\r\n**Project Status:** The project is still being actively developed. Please refer to [docs/roadmap.md](docs/roadmap.md) and [CONTRIBUTING](CONTRIBUTING.md) if you are willing to help us improve Trae Agent.\r\n\r\n**Difference with Other CLI Agents:** Trae Agent offers a transparent, modular architecture that researchers and developers can easily modify, extend, and analyze, making it an ideal platform for **studying AI agent architectures, conducting ablation studies, and developing novel agent capabilities**. This **_research-friendly design_** enables the academic and open-source communities to contribute to and build upon the foundational agent framework, fostering innovation in the rapidly evolving field of AI agents.\r\n\r\n## ✨ Features\r\n\r\n- 🌊 **Lakeview**: Provides short and concise summarisation for agent steps\r\n- 🤖 **Multi-LLM Support**: Works with OpenAI, Anthropic, Doubao, Azure, OpenRouter, Ollama and Google Gemini APIs\r\n- 🛠️ **Rich Tool Ecosystem**: File editing, bash execution, sequential thinking, and more\r\n- 🎯 **Interactive Mode**: Conversational interface for iterative development\r\n- 📊 **Trajectory Recording**: Detailed logging of all agent actions for debugging and analysis\r\n- ⚙️ **Flexible Configuration**: JSON-based configuration with environment variable support\r\n- 🚀 **Easy Installation**: Simple pip-based installation\r\n\r\n## 🚀 Quick Start\r\n\r\n### Installation\r\n\r\nWe strongly recommend using [uv](https://docs.astral.sh/uv/) to setup the project.\r\n\r\n```bash\r\ngit clone https://github.com/bytedance/trae-agent.git\r\ncd trae-agent\r\nuv venv\r\nuv sync --all-extras\r\n```\r\n\r\nor use make.\r\n\r\n```bash\r\nmake uv-venv\r\nmake uv-sync\r\n```\r\n\r\n### Setup API Keys\r\n\r\nWe recommend to configure Trae Agent using the config file.\r\n\r\n**Configuration Setup:**\r\n\r\n1. **Copy the example configuration file:**\r\n\r\n   ```bash\r\n   cp trae_config.json.example trae_config.json\r\n   ```\r\n\r\n2. **Edit `trae_config.json` and replace the placeholder values with your actual credentials:**\r\n   - Replace `\"your_openai_api_key\"` with your actual OpenAI API key\r\n   - Replace `\"your_anthropic_api_key\"` with your actual Anthropic API key\r\n   - Replace `\"your_google_api_key\"` with your actual Google API key\r\n   - Replace `\"your_azure_base_url\"` with your actual Azure base URL\r\n   - Replace other placeholder URLs and API keys as needed\r\n\r\n**Note:** The `trae_config.json` file is ignored by git to prevent accidentally committing your API keys.\r\n\r\nYou can also set your API keys as environment variables:\r\n\r\n```bash\r\n# For OpenAI\r\nexport OPENAI_API_KEY=\"your-openai-api-key\"\r\n\r\n# For Anthropic\r\nexport ANTHROPIC_API_KEY=\"your-anthropic-api-key\"\r\n\r\n# For Doubao (also works with other OpenAI-compatible model providers)\r\nexport DOUBAO_API_KEY=\"your-doubao-api-key\"\r\nexport DOUBAO_BASE_URL=\"your-model-provider-base-url\"\r\n\r\n# For OpenRouter\r\nexport OPENROUTER_API_KEY=\"your-openrouter-api-key\"\r\n\r\n# For Google Gemini\r\nexport GOOGLE_API_KEY=\"your-google-api-key\"\r\n\r\n# Optional: For OpenRouter rankings\r\nexport OPENROUTER_SITE_URL=\"https://your-site.com\"\r\nexport OPENROUTER_SITE_NAME=\"Your App Name\"\r\n\r\n# Optional: If you want to use a specific openai compatible api provider, you can set the base url here\r\nexport OPENAI_BASE_URL=\"your-openai-compatible-api-base-url\"\r\n```\r\n\r\nAlthough you can pass your API key directly using the `api_key` argument, we suggest utilizing [python-dotenv](https://pypi.org/project/python-dotenv/) to add `MODEL_API_KEY=\"My API Key\"` to your `.env` file. This approach helps prevent your API key from being exposed in source control.\r\n\r\n### Basic Usage\r\n\r\n```bash\r\n# Run a simple task\r\ntrae-cli run \"Create a hello world Python script\"\r\n\r\n# Run with Doubao\r\ntrae-cli run \"Create a hello world Python script\" --provider doubao --model doubao-seed-1.6\r\n\r\n# Run with Google Gemini\r\ntrae-cli run \"Create a hello world Python script\" --provider google --model gemini-2.5-flash\r\n```\r\n\r\n## 📖 Usage\r\n\r\n### Command Line Interface\r\n\r\nThe main entry point is the `trae`", "full_doc_id": "doc-8b2c86f7511cc3983d8fee5461ca811b", "file_path": "trae-agent项目说明.txt"}, {"__id__": "chunk-95411a3d7467192927dc03dfda288b28", "__created_at__": 1754449282, "content": "trae-cli run \"Create a hello world Python script\"\r\n\r\n# Run with Doubao\r\ntrae-cli run \"Create a hello world Python script\" --provider doubao --model doubao-seed-1.6\r\n\r\n# Run with Google Gemini\r\ntrae-cli run \"Create a hello world Python script\" --provider google --model gemini-2.5-flash\r\n```\r\n\r\n## 📖 Usage\r\n\r\n### Command Line Interface\r\n\r\nThe main entry point is the `trae` command with several subcommands:\r\n\r\n#### `trae run` - Execute a Task\r\n\r\n```bash\r\n# Basic task execution\r\ntrae-cli run \"Create a Python script that calculates fibonacci numbers\"\r\n\r\n# With specific provider and model\r\ntrae-cli run \"Fix the bug in main.py\" --provider anthropic --model claude-sonnet-4-20250514\r\n\r\n# Using OpenRouter with any supported model\r\ntrae-cli run \"Optimize this code\" --provider openrouter --model \"openai/gpt-4o\"\r\ntrae-cli run \"Add documentation\" --provider openrouter --model \"anthropic/claude-3-5-sonnet\"\r\n\r\n# Using Google Gemini\r\ntrae-cli run \"Implement a data parsing function\" --provider google --model gemini-2.5-pro\r\n\r\n# With custom working directory\r\ntrae-cli run \"Add unit tests for the utils module\" --working-dir /path/to/project\r\n\r\n# Save trajectory for debugging\r\ntrae-cli run \"Refactor the database module\" --trajectory-file debug_session.json\r\n\r\n# Force to generate patches\r\ntrae-cli run \"Update the API endpoints\" --must-patch\r\n```\r\n\r\n#### `trae interactive` - Interactive Mode\r\n\r\n```bash\r\n# Start interactive session\r\ntrae-cli interactive\r\n\r\n# With custom configuration\r\ntrae-cli interactive --provider openai --model gpt-4o --max-steps 30\r\n```\r\n\r\nIn interactive mode, you can:\r\n\r\n- Type any task description to execute it\r\n- Use `status` to see agent information\r\n- Use `help` for available commands\r\n- Use `clear` to clear the screen\r\n- Use `exit` or `quit` to end the session\r\n\r\n#### `trae show-config` - Configuration Status\r\n\r\n```bash\r\ntrae-cli show-config\r\n\r\n# With custom config file\r\ntrae-cli show-config --config-file my_config.json\r\n```\r\n\r\n### Configuration\r\n\r\nTrae Agent uses a JSON configuration file for settings. Please refer to the `trae_config.json` file in the root directory for the detailed configuration structure.\r\n\r\n**WARNING:**\r\nFor Doubao users, please use the following base_url.\r\n\r\n```\r\nbase_url=https://ark.cn-beijing.volces.com/api/v3/\r\n```\r\n\r\n**Configuration Priority:**\r\n\r\n1. Command-line arguments (highest)\r\n2. Configuration file values\r\n3. Environment variables\r\n4. Default values (lowest)\r\n\r\n```bash\r\n# Use GPT-4 through OpenRouter\r\ntrae-cli run \"Write a Python script\" --provider openrouter --model \"openai/gpt-4o\"\r\n\r\n# Use Claude through OpenRouter\r\ntrae-cli run \"Review this code\" --provider openrouter --model \"anthropic/claude-3-5-sonnet\"\r\n\r\n# Use Gemini through OpenRouter\r\ntrae-cli run \"Generate docs\" --provider openrouter --model \"google/gemini-pro\"\r\n\r\n# Use Gemini directly\r\ntrae-cli run \"Analyze this dataset\" --provider google --model gemini-2.5-flash\r\n\r\n# Use Qwen through Ollama\r\ntrae-cli run \"Comment this code\" --provider ollama --model \"qwen3\"\r\n```\r\n\r\n**Popular OpenRouter Models:**\r\n\r\n- `openai/gpt-4o` - Latest GPT-4 model\r\n- `anthropic/claude-3-5-sonnet` - Excellent for coding tasks\r\n- `google/gemini-pro` - Strong reasoning capabilities\r\n- `meta-llama/llama-3.1-405b` - Open source alternative\r\n- `openai/gpt-4o-mini` - Fast and cost-effective\r\n\r\n### Environment Variables\r\n\r\n- `OPENAI_API_KEY` - OpenAI API key\r\n- `ANTHROPIC_API_KEY` - Anthropic API key\r\n- `GOOGLE_API_KEY` - Google Gemini API key\r\n- `OPENROUTER_API_KEY` - OpenRouter API key\r\n- `OPENROUTER_SITE_URL` - (Optional) Your site URL for OpenRouter rankings\r\n- `OPENROUTER_SITE_NAME` - (Optional) Your site name for OpenRouter rankings\r\n\r\n## 🛠️ Available Tools\r\n\r\nTrae Agent provides a comprehensive toolkit for file editing, bash execution, structured thinking, task completion, and JSON manipulation, with new tools actively being developed and existing ones continuously enhanced.\r\n\r\nFor detailed information about all available tools and their capabilities, see [docs/tools.md](docs/tools.md).\r\n\r\n## 📊 Trajectory Recording\r\n\r\nTrae Agent automatically records detailed execution trajectories for debugging and analysis:\r\n\r\n```bash\r\n# Auto-generated trajectory file\r\ntrae-cli run \"Debug the authentication module\"\r\n# Saves to: trajectories/trajectory_20250612_220546.json\r\n\r\n# Custom trajectory file\r\ntrae-cli run \"Optimize the database queries\" --trajectory-file optimization_debug.json\r\n```\r\n\r\nTrajectory files contain:\r\n\r\n- **LLM Interactions**: All messages, responses, and tool calls\r\n- **Agent Steps**: State transitions and decision points\r\n- **Tool Usage**: Which tools were called and their results\r\n- **Metadata**: Timestamps, token usage, and execution metrics\r\n\r\nFor more details, see [docs/TRAJECTORY_RECORDING.md](docs/TRAJECTORY_RECORDING.md).\r\n\r\n## 🤝 Contributing\r\n\r\nFor detailed contribution guidelines, please refer to [CONTRIBUTING.md](CON", "full_doc_id": "doc-8b2c86f7511cc3983d8fee5461ca811b", "file_path": "trae-agent项目说明.txt"}, {"__id__": "chunk-a367d94732179611c882172c7bdf6f14", "__created_at__": 1754449282, "content": "actions**: All messages, responses, and tool calls\r\n- **Agent Steps**: State transitions and decision points\r\n- **Tool Usage**: Which tools were called and their results\r\n- **Metadata**: Timestamps, token usage, and execution metrics\r\n\r\nFor more details, see [docs/TRAJECTORY_RECORDING.md](docs/TRAJECTORY_RECORDING.md).\r\n\r\n## 🤝 Contributing\r\n\r\nFor detailed contribution guidelines, please refer to [CONTRIBUTING.md](CONTRIBUTING.md).\r\n\r\n1. Fork the repository\r\n2. Set up a development install:\r\n\r\n   ```bash\r\n   make install-dev\r\n   ```\r\n\r\n3. Create a feature branch (`git checkout -b feature/amazing-feature`)\r\n4. Make your changes\r\n5. Add tests for new functionality\r\n6. Pre-commit check\r\n\r\n   ```bash\r\n    make pre-commit\r\n    or:\r\n    make uv-pre-commit\r\n   ```\r\n\r\n    if having formatting error,please try:\r\n\r\n   ```\r\n    make fix-format\r\n   ```\r\n\r\n7. Commit your changes (`git commit -m 'Add amazing feature'`)\r\n8. Push to the branch (`git push origin feature/amazing-feature`)\r\n9. Open a Pull Request\r\n\r\n### Development Guidelines\r\n\r\n- Follow PEP 8 style guidelines\r\n- Add tests for new features\r\n- Update documentation as needed\r\n- Use type hints where appropriate\r\n- Ensure all tests pass before submitting\r\n\r\n## 📋 Requirements\r\n\r\n- Python 3.12+\r\n- API key for your chosen provider:\r\n  - OpenAI API key (for OpenAI models)\r\n  - Anthropic API key (for Anthropic models)\r\n  - OpenRouter API key (for OpenRouter models)\r\n  - Google API key (for Google Gemini models)\r\n\r\n## 🔧 Troubleshooting\r\n\r\n### Common Issues\r\n\r\n**Import Errors:**\r\n\r\n```bash\r\n# Try setting PYTHONPATH\r\nPYTHONPATH=. trae-cli run \"your task\"\r\n```\r\n\r\n**API Key Issues:**\r\n\r\n```bash\r\n# Verify your API keys are set\r\necho $OPENAI_API_KEY\r\necho $ANTHROPIC_API_KEY\r\necho $GOOGLE_API_KEY\r\necho $OPENROUTER_API_KEY\r\n\r\n# Check configuration\r\ntrae-cli show-config\r\n```\r\n\r\n**Permission Errors:**\r\n\r\n```bash\r\n# Ensure proper permissions for file operations\r\nchmod +x /path/to/your/project\r\n```\r\n\r\n**Command not found Errors:**\r\n\r\n```bash\r\n# you can try\r\nuv run trae-cli `xxxxx`\r\n```\r\n\r\n## 📄 License\r\n\r\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\r\n\r\n## 🙏 Acknowledgments\r\n\r\nWe thank Anthropic for building the [anthropic-quickstart](https://github.com/anthropics/anthropic-quickstarts) project that served as a valuable reference for the tool ecosystem.", "full_doc_id": "doc-8b2c86f7511cc3983d8fee5461ca811b", "file_path": "trae-agent项目说明.txt"}, {"__id__": "chunk-2cffa1c03720c0ebf3b665c1d2acb968", "__created_at__": 1754466329, "content": "Subject,Predicate,Object\r\nhttps://example.org/org/tsinghua,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,schema:Organization\r\nhttps://example.org/paper/gnn-review-2020,schema:about,N5a97b32c53bc421da6fac707d419b7b7\r\nNb06ef146e0c4479fbff8179429ec4256,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://schema.org/Thing\r\nhttps://example.org/field/gnn,http://schema.org/name,Graph Neural Networks\r\nhttps://example.org/org/stanford,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,schema:Organization\r\nhttps://example.org/author/wang-li,http://schema.org/name,Wang Li\r\nhttps://example.org/author/john-smith,http://schema.org/name,John Smith\r\nhttps://example.org/paper/gnn-review-2020,schema:about,Nb06ef146e0c4479fbff8179429ec4256\r\nN5c3b71d117574300a39a59a9b8c30fce,http://schema.org/name,deep learning\r\nhttps://example.org/author/john-smith,schema:affiliation,https://example.org/org/stanford\r\nhttps://example.org/author/wang-li,schema:affiliation,https://example.org/org/tsinghua\r\nhttps://example.org/org/tsinghua,http://schema.org/name,Tsinghua University\r\nhttps://example.org/paper/gnn-review-2020,http://example.org/fieldOfStudy,https://example.org/field/gnn\r\nNb06ef146e0c4479fbff8179429ec4256,http://schema.org/name,representation learning\r\nhttps://example.org/field/ai,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://schema.org/DefinedTerm\r\nhttps://example.org/field/ai,http://schema.org/name,Artificial Intelligence\r\nhttps://example.org/paper/gnn-review-2020,schema:citation,https://example.org/paper/gnn-applications-2022\r\nN5a97b32c53bc421da6fac707d419b7b7,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://schema.org/Thing\r\nhttps://example.org/paper/gnn-applications-2022,http://schema.org/name,Applications of Graph Neural Networks in Biology\r\nhttps://example.org/paper/gnn-review-2020,http://schema.org/datePublished,2020-06-01\r\nhttps://example.org/paper/gnn-review-2020,http://schema.org/author,https://example.org/author/wang-li\r\nhttps://example.org/author/john-smith,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,schema:Person\r\nhttps://example.org/field/gnn,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://schema.org/DefinedTerm\r\nhttps://example.org/paper/gnn-review-2020,schema:about,N5c3b71d117574300a39a59a9b8c30fce\r\nhttps://example.org/paper/gnn-applications-2022,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://schema.org/ScholarlyArticle\r\nN5a97b32c53bc421da6fac707d419b7b7,http://schema.org/name,graph neural networks\r\nhttps://example.org/paper/gnn-review-2020,http://schema.org/author,https://example.org/author/john-smith\r\nhttps://example.org/paper/gnn-review-2020,http://example.org/fieldOfStudy,https://example.org/field/ai\r\nhttps://example.org/author/wang-li,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,schema:Person\r\nhttps://example.org/paper/gnn-review-2020,http://schema.org/name,Graph Neural Networks: A Review\r\nhttps://example.org/org/stanford,http://schema.org/name,Stanford University\r\nhttps://example.org/paper/gnn-review-2020,http://schema.org/url,https://arxiv.org/abs/2002.05709\r\nhttps://example.org/paper/gnn-review-2020,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://schema.org/ScholarlyArticle\r\nN5c3b71d117574300a39a59a9b8c30fce,http://www.w3.org/1999/02/22-rdf-syntax-ns#type,http://schema.org/Thing", "full_doc_id": "doc-2cffa1c03720c0ebf3b665c1d2acb968", "file_path": "example_triples.csv"}], "matrix": ""}